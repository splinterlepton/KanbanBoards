package model;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import dbconnection.DBConnection;


public class Kanban {
	
	String name;
	String description;
	static List<KanbanBoard> boardList = new ArrayList<KanbanBoard>(); //list of projects
	static DBConnection db = new DBConnection();
	static Map<String, User> userMap = new HashMap<String, User>();
	
	static void addKanbonBoard (String name, String description) {
		boardList.add(new KanbanBoard(name, description));
		
	}
	
	public static void showUsers () {
		userMap = db.selectUsers();
		for (Map.Entry<String, User> entry : userMap.entrySet()) {
		    System.out.println("Key = " + entry.getKey() + ", Value = " + entry.getValue().getInfo());
		}
	}
	
	public static void addUser (String name, String phone) {
		int flag = 0;
		for (Map.Entry<String, User> entry : userMap.entrySet()) {
			if (entry.getKey().equals(name)) {
		    	System.out.println("NIE DODANO UZYTKOWNIKA, PODANY LOGIN JEST JU¯ ZAJÊTY!!! WYBIERZ INNY");
		    	flag = 1;
		    }
		}
		if (flag == 0) {
		    	db.insertUsers(name, phone);
				userMap = db.selectUsers();
		}
		
	}
	
	public static void deleteUser (String name) {
		if (userMap.get(name).projectsNumber == 0) {
			db.deleteUsers(name);
		} else {
			System.out.println("NIE MO¯NA USUN¥Æ U¯YTKOWNIKA PONIEWA¯ JEST PRZYPISANY DO ZADAÑ!!!!");
		}
		
	}
	
	public static void updateUser (String oldName, String newName, String newPhone) {
		int oldProjectsNumber = userMap.get(oldName).projectsNumber;
		for (Map.Entry<String, User> entry : userMap.entrySet()) {
			if (entry.getKey().equals(newName)) {
		    	System.out.println("NIE ZAKTUALIZOWANO, PODANY LOGIN JEST JU¯ ZAJÊTY!!! WYBIERZ INNY");
		    } else {
				db.deleteUsers(oldName);
				db.updateUsers(newName, newPhone, oldProjectsNumber);
		    }
		}
		userMap = db.selectUsers();
	}

	public static void main(String[] args) {
		userMap = db.selectUsers();
		
		showUsers();
		System.out.println();
		addUser("Ula", "777888777");
		//updateUser("Ula", "Ewa", "123123123");
		//updateUser("Ula", "Urszula", "123123123");
		showUsers();
		
		//addUser("Ula", "999999999");

		/*
		//new kanban board created
		addKanbonBoard("Rozk³ad jazdy", "oto opis kanban boarda rozk³ad jazdy");
		
		//dodajemy kilka kolumn
		boardList.get(0).column.add(new Column("To Do"));
		boardList.get(0).column.add(new Column("Development"));
		boardList.get(0).column.add(new Column("Tests"));
		boardList.get(0).column.add(new Column("Completed"));
		
		//3 new tasks added
		boardList.get(0).column.get(0).task.add(new Task("Interfejs u¿ytkownika", 
				"stworzyæ przejrzysty, graficzny interfejs u¿ytkownika"));		// adding some data
		boardList.get(0).column.get(0).task.add(new Task("Zadanie2", 
				"opis2", 3));
		boardList.get(0).column.get(1).task.add(new Task("Zadanie3", 
				"opis3", 2));
		
		//owners assigned to the tasks
		boardList.get(0).column.get(0).task.get(0).owner.add(userMap.get("Adam"));
		boardList.get(0).column.get(0).task.get(0).owner.add(userMap.get("Arek"));
		boardList.get(0).column.get(0).task.get(1).owner.add(userMap.get("Adam"));
		boardList.get(0).column.get(1).task.get(0).owner.add(userMap.get("Adam"));
		
		//deadline added
		boardList.get(0).column.get(1).task.get(0).setDeadline("2015.12.12");
		
		//new coment added
		boardList.get(0).column.get(1).task.get(0).comment.add
		(new Comment("Siê robi", "Bu³ka z mas³em :)", userMap.get("Arek")));
		
		System.out.println(boardList.get(0).getInfo());  //writing in the console

		*/
		
	 
		
		
		//hashmap nazwa - nazwa projektu, wartoœæ - board
		db.closeConnection();
	}

}
